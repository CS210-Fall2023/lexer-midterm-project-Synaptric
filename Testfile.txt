module
natural
is
/*
     *Here we define that natural is actually just an
     *unconstrained subtype of type ccx_native_unsigned.
     */ (comment)
subtype
natural
is
ccx_native_unsigned;
function

"+" (string)
(lhs,
rhs:
natural)
return
natural
is
begin
return
(lhs.val
+
rhs.val);
end

"+" (string)
;
function

"-" (string)
(lhs,
rhs:
natural)
return
natural
is
begin
return
(lhs.val
-
rhs.val);
end

"-" (string)
;
function

"-" (string)
(x:
natural)
return
natural
is
begin
return
(-x.val);
end

"-" (string)
;
function

"*" (string)
(lhs,
rhs:
natural)
return
natural
is
begin
return
(lhs.val
*
rhs.val);
end

"*" (string)
;
function

"/" (string)
(lhs,
rhs:
natural)
return
natural
is
begin
if
(rhs.val
=
0 (numeric literal)
)
then
/*
             *Raise an exception... won't return from this.
             */ (comment)
rtl.raise_exception(E_DIVBYZERO);
end
if;
return
(lhs.val

rhs.val);
end

"/" (string)
;
function

"mod" (string)
(lhs,
rhs:
natural)
return
natural
is
begin
if
(rhs.val
=
0 (numeric literal)
)
then
/*
             *Raise an exception... won't return from this.
             */ (comment)
rtl.raise_exception(E_DIVBYZERO);
end
if;
return
(lhs.val
mod
rhs.val);
end

"mod" (string)
;
end
natural;
